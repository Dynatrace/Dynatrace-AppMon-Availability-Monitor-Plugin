
 /**
  * This template file was generated by dynaTrace client.
  * The dynaTrace community portal can be found here: http://community.dynatrace.com/
  * For information how to publish a plugin please visit http://community.dynatrace.com/plugins/contribute/
  **/ 

package com.mycompany.myplugin;

import com.dynatrace.diagnostics.pdk.*;
import java.util.Collection;
import java.util.logging.Logger;


public class AM extends AvailMonitor implements Monitor {

	private static final Logger log = Logger.getLogger(AM.class.getName());
	private static final String METRIC_GROUP = "Availability Monitor";

//Measures to be used.
	private static final String MSR_AVAILABILITY = "Availability";
	private static final String MSR_VIOLATION = "Violation";
	private static final String MSR_DNS_RESOLUTION_VIOLATION = "DNS Resolution Violation";
	private static final String MSR_PING_VIOLATION = "Ping Violation";
	private static final String MSR_REVERSE_DNS_VIOLATION = "Reverse DNS Violation";
	private static final String MSR_TCP_CONNECT_VIOLATION = "TCP Connect Violation";


	@Override
	public Status setup(MonitorEnvironment env) throws Exception {
		return new Status(Status.StatusCode.Success);
	}

	@Override
	public Status execute(MonitorEnvironment env) throws Exception {
		Status result = super.execute(env);

		Collection<MonitorMeasure> measures;
		
		//Active Measures.
		if ((measures = env.getMonitorMeasures(METRIC_GROUP, MSR_AVAILABILITY)) != null) {
			for (MonitorMeasure measure : measures)
				measure.setValue(this.getAvailability());
		}
		if ((measures = env.getMonitorMeasures(METRIC_GROUP, MSR_VIOLATION)) != null) {
			for (MonitorMeasure measure : measures)
				measure.setValue(this.getAvailabilityViolation());
		}
		
		if ((measures = env.getMonitorMeasures(METRIC_GROUP, MSR_REVERSE_DNS_VIOLATION)) != null) {
			for (MonitorMeasure measure : measures)
				measure.setValue(this.getReverseDNSConnectViolation());
		}
		if ((measures = env.getMonitorMeasures(METRIC_GROUP, MSR_PING_VIOLATION)) != null) {
			for (MonitorMeasure measure : measures)
				measure.setValue(this.getPingViolation());
		}
		if ((measures = env.getMonitorMeasures(METRIC_GROUP, MSR_DNS_RESOLUTION_VIOLATION)) != null) {
			for (MonitorMeasure measure : measures)
				measure.setValue(this.getDNSResolutionViolation());
		}
		if ((measures = env.getMonitorMeasures(METRIC_GROUP, MSR_TCP_CONNECT_VIOLATION)) != null) {
			for (MonitorMeasure measure : measures)
				measure.setValue(this.getTCPConnectViolation());
		}

		

		return result;
	}
	
	@Override
	public void teardown(MonitorEnvironment env) throws Exception {
		super.teardown(env);
	}
}
